<?xml version="1.0" encoding="UTF-8"?>		
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
 	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/"/>
	<resources mapping="/popup/**" location="/WEB-INE/popup/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.real_estate.agent" />
	
		<!-- 파일 업로드로 들어오는 데이터를 처리하는 객체 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 최대업로드 가능한 바이트크기 -->
		<beans:property name="maxUploadSize" value="50971520" /> <!--약 20mb 제한 -->
		   <!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<beans:property name="maxInMemorySize" value="50971520" /> <!--약 20mb 제한 -->
		   <!-- defaultEncoding -->
		<beans:property name="defaultEncoding" value="utf-8" />	<!-- 인코딩 -->
	</beans:bean>
	
	
	
	<!-- 인터셉터 객체 생성 -->
    <beans:bean id="AuthenticationInterceptor" 
    class="com.real_estate.agent.dao.AuthenticationInterceptor">
    </beans:bean>
    
    <!-- Interceptor 설정 -->
    <interceptors> 
        <interceptor>
            <mapping path="/list"/>
            <mapping path="/sublist"/>
            <mapping path="/filter"/>
            <mapping path="/object_insert"/>
            <mapping path="/object_view_data"/>
            <mapping path="/delete_object"/>
            <mapping path="/update_state"/>
            <mapping path="/object_update"/>
            <mapping path="/update_form"/>
            <mapping path="/f_test"/>
            <mapping path="/customer"/>
            <mapping path="/Insert_customer"/>
            <mapping path="/update_customer"/>
            <mapping path="/delete_customer"/>
            <mapping path="/search_customer"/>
            <mapping path="/customer_interest"/>
            <mapping path="/New_insert_C_interest"/>
            <mapping path="/customer_interest_add"/>
            <mapping path="/customer_interest_view"/>
            <mapping path="/delete_cs"/>
            <mapping path="/schedule"/>
            <mapping path="/day_schedule"/>
            <mapping path="/schedule_Insert"/>
            <mapping path="/storage"/>
            <mapping path="/Storage_page"/>
            <mapping path="/delete_storage"/>
            <mapping path="/add_storage"/>
            <mapping path="/building_nhn"/>
            <mapping path="/building_Insert"/>
            <exclude-mapping path="/loginform.nhn"/>
            <exclude-mapping path="login"/>
            
            <beans:ref bean="AuthenticationInterceptor"/>
           
        </interceptor>
    </interceptors>
     
    <context:component-scan base-package="com.real_estate.agent" />
    <context:component-scan base-package="com.real_estate.agent" />
	
	
</beans:beans>










